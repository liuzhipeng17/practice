# 购物车回答问题

	1) 用户没有登录， 添加商品到购物车， 关闭浏览器再次打开， 不登录， 问： 购物车刚才添加的商品还在吗？
	2) 用户登录，添加商品到购物车， 关闭浏览器再次打开， 不登录， 问： 购物车刚才添加的商品还在吗？
	3) 用户没有登录， 添加商品到购物车， 关闭浏览器再次打开， 登录， 问： 购物车刚才添加的商品还在吗？
	4) 用户登录，添加商品到购物车， 关闭浏览器再次打开，登录， 问： 购物车刚才添加的商品还在吗？
	5) 用户登录， 添加商品到购物车。 换一台设备登录， 问： 购物车刚才添加的商品还在吗？
	
	
#2 回答上面问题

	1) 用户没有登录， 则商品是保存客户端的cookie中，并没有保存到服务端； 当用户再次打开浏览器（不登录）， 购物车的商品还是保存
	在浏览器的cookie中， 因此还在
	
	（此时完全是由前端实现）
	
	
	2) 用户登录了，添加商品，此时会将cookie和用户的商品都添加到购物车中， 然后删除cookie中的商品。 
	
		（所以当用户再次打开浏览器，不登录的话是看不到商品的）
		
	3） 用户登录，添加商品，此时商品被添加到数据库持久化存储，再次打开并登录，商品肯定是存在购物车的
	
	
	
#3 购物车原理
	#简单就是一句话：
		用户没登录，购物车添加到cookie中；用户登录，购物车添加到redis中；
		

	# 优化： 加入购物车成功后，有一个提示页面： 可以继续购物，或者查看购物车页面； 而不是直接跳转到购物车列表页面	
	
	   -- 原因： cookie是存储在浏览器中的数据.当我们的代码执行到写入一条cookie时,并没有真正的写入,
				 是因为在response时,也就是渲染页面时候才能写入到cookie,在之前的版本中.我发现,当我渲染页面,在cookie中取值,并没有刚加入的cookie数据.
		
#3 实现原理图

	商品加入购物车：
	
		非登录： 
		
			1）获取cookie中的购物车
			2）没有，创建购物车对象
			3) 将当前商品添加到刚才创建的购物车对象上
			4) 保存刚才创建的购物车对象到cookie中
			5)  cookie写回浏览器， 24小时重定向
		
		登录：
			1) 将cookie中的购物车再次取出
			2) 没有，创建一个购物车对象
			3) 将商品添加到购物车
			4) 将购物车添加到redis
			5) 清空cookie
		
	
	