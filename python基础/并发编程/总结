#python多线程对于计算密集型的任务开多线程的效率甚至不如串行，但是
对于IO密集型的任务效率还是有明显提升的（爬虫，文件操作）

计算密集型的：一直在使用cpu（在固定时间间隔会发生线程切换，所以计算密集型任务存在大量切换）
# 切换也要耗cpu
IO密集型的：存在大量IO操作

#对于计算密集型的任务：python的多线程并没有用
#对于IO密集型的任务：python的多线程是有意义的

python使用多核：开进程，但是切换进程开销大

着重点：协程（yield,开发者控制切换) + 多进程

方向： IO多路复用f