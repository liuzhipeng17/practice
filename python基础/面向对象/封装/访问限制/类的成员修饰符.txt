私有变量__


如果要让内部属性不被外部访问，可以把属性的名称前加上两个下划线__，在Python中，
实例的变量名如果以__开头，就变成了一个私有变量（private），只有内部可以访问，外部不能访问


双下划线开头的实例变量是不是一定不能从外部访问呢？其实也不是。
不能直接访问__name是因为Python解释器对外把__name变量改成了_类名__name，
所以，仍然可以通过_类名__name来访问__name变量：



__语法： 只会在类定义的时候会将变量变形，如果是在类已经定义了，在给类添加属性，此时不会变形

_name 表示希望你视这个变量为私有的，不要直接调用它，但是没有强制作用，即instance._name 是合法的。

__name 表示这个变量是私有的，无法直接调用。即 instance.__name 是非法的。
但是这是因为解释器将该变量解析成了_ClassName__name的形式，因此instance._ClassName__name是合法的。
（当然具体解析出的形式如何取决于解释器，因此最佳实践是不要直接调用这种变量）

__name__表示这是具有特殊功能的变量