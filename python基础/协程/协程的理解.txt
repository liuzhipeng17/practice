# 协程的定义，

	def A():
		print '1'
		print '2'
		print '3'

	def B():
		print 'x'
		print 'y'
		print 'z'
	假设由协程执行，在执行A的过程中，可以随时中断，去执行B，B也可能在执行过程中中断再去执行A，结果可能是：

	1
	2
	x
	y
	3
	z
	但是在A中是没有调用B的，所以协程的调用比函数调用理解起来要难一些。（主要的特点）



# 协程的优势

	最大的优势：
	
		就是协程极高的执行效率。因为子程序切换不是线程切换，而是由程序自身控制，
		因此，没有线程切换的开销，和多线程比，线程数量越多，协程的性能优势就越明显。

	第二大优势：
	
	就是不需要多线程的锁机制，因为只有一个线程，也不存在同时写变量冲突，
	在协程中控制共享资源不加锁，只需要判断状态就好了，所以执行效率比多线程高很多。

# 如何利用多核cpu

	因为协程是一个线程执行，那怎么利用多核CPU呢？
	最简单的方法是多进程+协程，既充分利用多核，又充分发挥协程的高效率，可获得极高的性能。